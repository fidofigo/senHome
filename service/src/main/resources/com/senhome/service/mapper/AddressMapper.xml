<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.senhome.service.address.dal.mapper.AddressMapper" >

    <resultMap id="BaseResultMap" type="com.senhome.service.address.dal.dataobject.Address" >
        <id column="id" property="id"/>
        <result column="account_id" property="accountId"/>
        <result column="mobile_number" property="mobileNumber"/>
        <result column="detail_address" property="detailAddress"/>
        <result column="name" property="name"/>
        <result column="is_default" property="isDefault"/>
        <result column="is_available" property="isAvailable"/>
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, account_id, mobile_number, detail_address, `name`, is_default, is_available, create_time, update_time
    </sql>

    <select id="findById" resultMap="BaseResultMap" >
        select <include refid="Base_Column_List" />
        from receive_address
        where is_available = 1 and id = #{id}
    </select>

    <select id="findDefaultAddress" resultMap="BaseResultMap" >
        select <include refid="Base_Column_List" />
        from receive_address
        where is_available = 1 and account_id = #{accountId} and is_default = 1
    </select>

    <select id="findByAccountId" resultMap="BaseResultMap" >
        select <include refid="Base_Column_List" />
        from receive_address
        where is_available = 1 and account_id = #{accountId}
    </select>

    <insert id="insertAddress" parameterType="com.senhome.service.order.dal.dataobject.Order" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO receive_address(account_id, mobile_number, detail_address, `name`, is_default, create_time) VALUES(#{accountId}, #{mobileNumber}, #{detailAddress}, #{name}, #{isDefault}, now())
    </insert>

    <update id="updateAddress">
        update receive_address
        <set>
            <if test="accountId != null">
                account_id = #{accountId},
            </if>
            <if test="mobileNumber != null">
                mobile_number = #{mobileNumber},
            </if>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="detailAddress != null">
                detail_address = #{detailAddress},
            </if>
            <if test="isDefault != null">
                is_default = #{isDefault},
            </if>
            <if test="isAvailable != null">
                is_available = #{isAvailable},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteAddress" parameterType="int">
        delete from receive_address
        where id = #{id}
    </delete>

    <update id="updateAddressDefault" parameterType="int">
        update receive_address
        set is_default = 0
        where account_id = #{accountId}
    </update>


</mapper>